diff --git a/.gitignore b/.gitignore
index d8f8bca6..7815d819 100644
--- a/.gitignore
+++ b/.gitignore
@@ -12,3 +12,6 @@ build/
 log/
 nohup.out
 .DS_Store
+
+output
+dataset/*
diff --git a/infer.darknet.sh b/infer.darknet.sh
new file mode 100644
index 00000000..eb723f72
--- /dev/null
+++ b/infer.darknet.sh
@@ -0,0 +1,2 @@
+#!/bin/sh
+/c/ProgramData/Miniconda3/python tools/infer.py -c ./ppcls/configs/ImageNet/DarkNet/DarkNet53_Car.yaml -o Global.pretrained_model=output/DarkNet53/best_model -o Infer.infer_imgs="$1"
diff --git a/infer.sh b/infer.sh
new file mode 100644
index 00000000..08779428
--- /dev/null
+++ b/infer.sh
@@ -0,0 +1,2 @@
+#!/bin/sh
+/c/ProgramData/Miniconda3/python tools/infer.py -c ./ppcls/configs/ImageNet/DataAugment/ResNet50_Car.yaml -o Global.pretrained_model=output/ResNet50/best_model -o Infer.infer_imgs="$1"
diff --git a/ppcls/configs/ImageNet/DarkNet/DarkNet53_Car.yaml b/ppcls/configs/ImageNet/DarkNet/DarkNet53_Car.yaml
new file mode 100644
index 00000000..bba77f61
--- /dev/null
+++ b/ppcls/configs/ImageNet/DarkNet/DarkNet53_Car.yaml
@@ -0,0 +1,130 @@
+# global configs
+Global:
+  checkpoints: null
+  pretrained_model: null
+  output_dir: ./output/
+  device: gpu
+  save_interval: 100
+  eval_during_train: True
+  eval_interval: 100
+  epochs: 800
+  print_batch_step: 10
+  use_visualdl: False
+  # used for static mode and model export
+  image_shape: [3, 256, 256]
+  save_inference_dir: ./inference
+
+# model architecture
+Arch:
+  name: DarkNet53
+  class_num: 1000
+ 
+# loss function config for traing/eval process
+Loss:
+  Train:
+    - CELoss:
+        weight: 1.0
+        epsilon: 0.1
+  Eval:
+    - CELoss:
+        weight: 1.0
+
+
+Optimizer:
+  name: Momentum
+  momentum: 0.9
+  lr:
+    name: Cosine
+    learning_rate: 0.1
+  regularizer:
+    name: 'L2'
+    coeff: 0.0001
+
+
+# data loader for train and eval
+DataLoader:
+  Train:
+    dataset:
+      name: ImageNetDataset
+      image_root: ./dataset/n/
+      cls_label_path: ./dataset/n/train_list.txt
+      transform_ops:
+        - DecodeImage:
+            to_rgb: True
+            channel_first: False
+        - RandCropImage:
+            size: 256
+        - RandFlipImage:
+            flip_code: 1
+        - NormalizeImage:
+            scale: 1.0/255.0
+            mean: [0.485, 0.456, 0.406]
+            std: [0.229, 0.224, 0.225]
+            order: ''
+      batch_transform_ops:
+        - MixupOperator:
+            alpha: 0.2
+
+    sampler:
+      name: DistributedBatchSampler
+      batch_size: 64
+      drop_last: False
+      shuffle: True
+    loader:
+      num_workers: 4
+      use_shared_memory: True
+
+  Eval:
+    dataset: 
+      name: ImageNetDataset
+      image_root: ./dataset/n/
+      cls_label_path: ./dataset/n/val_list.txt
+      transform_ops:
+        - DecodeImage:
+            to_rgb: True
+            channel_first: False
+        - ResizeImage:
+            resize_short: 292
+        - CropImage:
+            size: 256
+        - NormalizeImage:
+            scale: 1.0/255.0
+            mean: [0.485, 0.456, 0.406]
+            std: [0.229, 0.224, 0.225]
+            order: ''
+    sampler:
+      name: DistributedBatchSampler
+      batch_size: 64
+      drop_last: False
+      shuffle: False
+    loader:
+      num_workers: 4
+      use_shared_memory: True
+
+Infer:
+  infer_imgs: docs/images/inference_deployment/whl_demo.jpg
+  batch_size: 10
+  transforms:
+    - DecodeImage:
+        to_rgb: True
+        channel_first: False
+    - ResizeImage:
+        resize_short: 292
+    - CropImage:
+        size: 256
+    - NormalizeImage:
+        scale: 1.0/255.0
+        mean: [0.485, 0.456, 0.406]
+        std: [0.229, 0.224, 0.225]
+        order: ''
+    - ToCHWImage:
+  PostProcess:
+    name: Topk
+    topk: 5
+    class_id_map_file: ppcls/utils/imagenet1k_label_list.txt
+
+Metric:
+  Train:
+  Eval:
+    - TopkAcc:
+        topk: [1, 5]
diff --git a/ppcls/configs/ImageNet/DataAugment/ResNet50_Car.yaml b/ppcls/configs/ImageNet/DataAugment/ResNet50_Car.yaml
new file mode 100644
index 00000000..bb923024
--- /dev/null
+++ b/ppcls/configs/ImageNet/DataAugment/ResNet50_Car.yaml
@@ -0,0 +1,128 @@
+# global configs
+Global:
+  checkpoints: null
+  pretrained_model: null
+  output_dir: ./output/
+  device: gpu
+  save_interval: 1
+  eval_during_train: True
+  eval_interval: 1
+  epochs: 300
+  print_batch_step: 10
+  use_visualdl: False
+  # used for static mode and model export
+  image_shape: [3, 224, 224]
+  save_inference_dir: ./inference
+
+# model architecture
+Arch:
+  name: ResNet50
+  class_num: 1000
+ 
+# loss function config for traing/eval process
+Loss:
+  Train:
+    - CELoss:
+        weight: 1.0
+  Eval:
+    - CELoss:
+        weight: 1.0
+
+
+Optimizer:
+  name: Momentum
+  momentum: 0.9
+  lr:
+    name: Cosine
+    learning_rate: 0.1
+  regularizer:
+    name: 'L2'
+    coeff: 0.0001
+
+
+# data loader for train and eval
+DataLoader:
+  Train:
+    dataset:
+      name: ImageNetDataset
+      image_root: ./dataset/n/
+      cls_label_path: ./dataset/n/train_list.txt
+      transform_ops:
+        - DecodeImage:
+            to_rgb: True
+            channel_first: False
+        - RandCropImage:
+            size: 224
+        - RandFlipImage:
+            flip_code: 1
+        - NormalizeImage:
+            scale: 1.0/255.0
+            mean: [0.485, 0.456, 0.406]
+            std: [0.229, 0.224, 0.225]
+            order: ''
+
+    sampler:
+      name: DistributedBatchSampler
+      batch_size: 64
+      drop_last: False
+      shuffle: True
+    loader:
+      num_workers: 4
+      use_shared_memory: True
+
+  Eval:
+    dataset: 
+      name: ImageNetDataset
+      image_root: ./dataset/n/
+      cls_label_path: ./dataset/n/val_list.txt
+      transform_ops:
+        - DecodeImage:
+            to_rgb: True
+            channel_first: False
+        - ResizeImage:
+            resize_short: 256
+        - CropImage:
+            size: 224
+        - NormalizeImage:
+            scale: 1.0/255.0
+            mean: [0.485, 0.456, 0.406]
+            std: [0.229, 0.224, 0.225]
+            order: ''
+    sampler:
+      name: DistributedBatchSampler
+      batch_size: 64
+      drop_last: False
+      shuffle: False
+    loader:
+      num_workers: 4
+      use_shared_memory: True
+
+Infer:
+  infer_imgs: docs/images/inference_deployment/whl_demo.jpg
+  batch_size: 10
+  transforms:
+    - DecodeImage:
+        to_rgb: True
+        channel_first: False
+    - ResizeImage:
+        resize_short: 256
+    - CropImage:
+        size: 224
+    - NormalizeImage:
+        scale: 1.0/255.0
+        mean: [0.485, 0.456, 0.406]
+        std: [0.229, 0.224, 0.225]
+        order: ''
+    - ToCHWImage:
+  PostProcess:
+    name: Topk
+    topk: 5
+    class_id_map_file: ppcls/utils/imagenet1k_label_list.txt
+
+Metric:
+  Train:
+    - TopkAcc:
+        topk: [1, 5]
+  Eval:
+    - TopkAcc:
+        topk: [1, 5]
diff --git a/train.darknet.sh b/train.darknet.sh
new file mode 100644
index 00000000..9f5b75bf
--- /dev/null
+++ b/train.darknet.sh
@@ -0,0 +1,2 @@
+#!/bin/sh
+/c/ProgramData/Miniconda3/python tools/train.py -c ./ppcls/configs/ImageNet/DarkNet/DarkNet53_Car.yaml -o Arch.pretrained=False -o Global.device=gpu
diff --git a/train.sh b/train.sh
new file mode 100644
index 00000000..545ca23e
--- /dev/null
+++ b/train.sh
@@ -0,0 +1,2 @@
+#!/bin/sh
+/c/ProgramData/Miniconda3/python tools/train.py -c ./ppcls/configs/ImageNet/DataAugment/ResNet50_Car.yaml -o Arch.pretrained=False -o Global.device=gpu
